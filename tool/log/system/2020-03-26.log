2020-03-26 23:29:15,849|INFO |restartedMain|Caller+0	 at org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55)
Starting ToolApplication on DESKTOP-3EKU3ND with PID 15692 (F:\code\Z01\server\z01\tool\target\classes started by 13265 in F:\code\Z01\server\z01)
2020-03-26 23:29:15,851|INFO |restartedMain|Caller+0	 at org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:655)
The following profiles are active: common
2020-03-26 23:29:15,888|INFO |restartedMain|Caller+0	 at org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)
Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-03-26 23:29:15,888|INFO |restartedMain|Caller+0	 at org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)
For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-03-26 23:29:16,373|INFO |restartedMain|Caller+0	 at org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:249)
Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-26 23:29:16,374|INFO |restartedMain|Caller+0	 at org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127)
Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-03-26 23:29:16,394|INFO |restartedMain|Caller+0	 at org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187)
Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
2020-03-26 23:29:16,484|WARN |restartedMain|Caller+0	 at org.mybatis.logging.Logger.warn(Logger.java:44)
No MyBatis mapper was found in '[com.zemel.*.mapping]' package. Please check your configuration.
2020-03-26 23:29:16,607|INFO |restartedMain|Caller+0	 at org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-26 23:29:16,835|INFO |restartedMain|Caller+0	 at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92)
Tomcat initialized with port(s): 8086 (http)
2020-03-26 23:29:16,841|INFO |restartedMain|Caller+0	 at org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)
Initializing ProtocolHandler ["http-nio-8086"]
2020-03-26 23:29:16,842|INFO |restartedMain|Caller+0	 at org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)
Starting service [Tomcat]
2020-03-26 23:29:16,842|INFO |restartedMain|Caller+0	 at org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)
Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-26 23:29:16,948|INFO |restartedMain|Caller+0	 at org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)
Initializing Spring embedded WebApplicationContext
2020-03-26 23:29:16,948|INFO |restartedMain|Caller+0	 at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)
Root WebApplicationContext: initialization completed in 1060 ms
2020-03-26 23:29:17,045|INFO |restartedMain|Caller+0	 at com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:56)
Init DruidDataSource
2020-03-26 23:29:17,144|INFO |restartedMain|Caller+0	 at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:928)
{dataSource-1} inited
2020-03-26 23:29:17,151|ERROR|restartedMain|Caller+0	 at com.zemel.tool.generate.Dbgenerate.start(Dbgenerate.java:32)
===========autoCreateClass  start==============
2020-03-26 23:29:17,241|ERROR|restartedMain|Caller+0	 at com.zemel.tool.generate.AbstractDbConnectionHelp.getTableInfos(AbstractDbConnectionHelp.java:44)
core_player   tableName 
2020-03-26 23:29:17,253|ERROR|restartedMain|Caller+0	 at com.zemel.tool.generate.AbstractDbConnectionHelp.getTableInfos(AbstractDbConnectionHelp.java:44)
core_room   tableName 
2020-03-26 23:29:17,256|ERROR|restartedMain|Caller+0	 at com.zemel.tool.generate.AbstractDbConnectionHelp.getTableInfos(AbstractDbConnectionHelp.java:44)
core_server_cluster   tableName 
2020-03-26 23:29:17,259|ERROR|restartedMain|Caller+0	 at com.zemel.tool.generate.AbstractDbConnectionHelp.getTableInfos(AbstractDbConnectionHelp.java:44)
mall_admin_user   tableName 
2020-03-26 23:29:17,261|ERROR|restartedMain|Caller+0	 at com.zemel.tool.generate.AbstractDbConnectionHelp.getTableInfos(AbstractDbConnectionHelp.java:44)
mall_commodity   tableName 
2020-03-26 23:29:17,264|ERROR|restartedMain|Caller+0	 at com.zemel.tool.generate.AbstractDbConnectionHelp.getTableInfos(AbstractDbConnectionHelp.java:44)
mall_mall_user   tableName 
2020-03-26 23:29:17,266|ERROR|restartedMain|Caller+0	 at com.zemel.tool.generate.AbstractDbConnectionHelp.getTableInfos(AbstractDbConnectionHelp.java:44)
mall_product_order   tableName 
2020-03-26 23:29:17,272|ERROR|restartedMain|Caller+0	 at com.zemel.tool.generate.Dbgenerate.generateCode(Dbgenerate.java:58)
generate table PlayerInfo success
2020-03-26 23:29:17,274|ERROR|restartedMain|Caller+0	 at com.zemel.tool.generate.Dbgenerate.generateCode(Dbgenerate.java:58)
generate table RoomInfo success
2020-03-26 23:29:17,275|ERROR|restartedMain|Caller+0	 at com.zemel.tool.generate.Dbgenerate.generateCode(Dbgenerate.java:58)
generate table ServerClusterInfo success
2020-03-26 23:29:17,276|ERROR|restartedMain|Caller+0	 at com.zemel.tool.generate.Dbgenerate.generateCode(Dbgenerate.java:58)
generate table AdminUserInfo success
2020-03-26 23:29:17,277|ERROR|restartedMain|Caller+0	 at com.zemel.tool.generate.Dbgenerate.generateCode(Dbgenerate.java:58)
generate table CommodityInfo success
2020-03-26 23:29:17,277|ERROR|restartedMain|Caller+0	 at com.zemel.tool.generate.Dbgenerate.generateCode(Dbgenerate.java:58)
generate table MallUserInfo success
2020-03-26 23:29:17,278|ERROR|restartedMain|Caller+0	 at com.zemel.tool.generate.Dbgenerate.generateCode(Dbgenerate.java:58)
generate table ProductOrderInfo success
2020-03-26 23:29:17,279|ERROR|restartedMain|Caller+0	 at com.zemel.tool.generate.Dbgenerate.start(Dbgenerate.java:49)
===========autoCreateClass  end==============
2020-03-26 23:29:17,397|INFO |restartedMain|Caller+0	 at org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)
Initializing ExecutorService 'applicationTaskExecutor'
2020-03-26 23:29:17,439|INFO |restartedMain|Caller+0	 at org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping.<init>(WelcomePageHandlerMapping.java:54)
Adding welcome page: class path resource [static/index.html]
2020-03-26 23:29:17,907|INFO |restartedMain|Caller+0	 at org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1220)
Using default implementation for ThreadExecutor
2020-03-26 23:29:17,908|INFO |restartedMain|Caller+0	 at org.quartz.simpl.SimpleThreadPool.initialize(SimpleThreadPool.java:268)
Job execution threads will use class loader of thread: restartedMain
2020-03-26 23:29:17,915|INFO |restartedMain|Caller+0	 at org.quartz.core.SchedulerSignalerImpl.<init>(SchedulerSignalerImpl.java:61)
Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-03-26 23:29:17,915|INFO |restartedMain|Caller+0	 at org.quartz.core.QuartzScheduler.<init>(QuartzScheduler.java:229)
Quartz Scheduler v.2.3.2 created.
2020-03-26 23:29:17,915|INFO |restartedMain|Caller+0	 at org.quartz.simpl.RAMJobStore.initialize(RAMJobStore.java:155)
RAMJobStore initialized.
2020-03-26 23:29:17,916|INFO |restartedMain|Caller+0	 at org.quartz.core.QuartzScheduler.initialize(QuartzScheduler.java:294)
Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 4 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2020-03-26 23:29:17,916|INFO |restartedMain|Caller+0	 at org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1374)
Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2020-03-26 23:29:17,916|INFO |restartedMain|Caller+0	 at org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1378)
Quartz scheduler version: 2.3.2
2020-03-26 23:29:17,916|INFO |restartedMain|Caller+0	 at org.quartz.core.QuartzScheduler.setJobFactory(QuartzScheduler.java:2293)
JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@65260dee
2020-03-26 23:29:17,957|WARN |restartedMain|Caller+0	 at org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:61)
Unable to start LiveReload server
2020-03-26 23:29:18,009|INFO |restartedMain|Caller+0	 at org.springframework.scheduling.quartz.SchedulerFactoryBean.startScheduler(SchedulerFactoryBean.java:727)
Starting Quartz Scheduler now
2020-03-26 23:29:18,009|INFO |restartedMain|Caller+0	 at org.quartz.core.QuartzScheduler.start(QuartzScheduler.java:547)
Scheduler quartzScheduler_$_NON_CLUSTERED started.
2020-03-26 23:29:18,015|INFO |restartedMain|Caller+0	 at org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)
Starting ProtocolHandler ["http-nio-8086"]
2020-03-26 23:29:18,041|INFO |restartedMain|Caller+0	 at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204)
Tomcat started on port(s): 8086 (http) with context path ''
2020-03-26 23:29:18,043|INFO |restartedMain|Caller+0	 at org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61)
Started ToolApplication in 2.667 seconds (JVM running for 3.404)
